name: Bump version and create release
on:
  pull_request:
    types:
      - closed
    branches:
      - main
      - github_action # TODO: Remove before merge

jobs:
  bump-version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_tag: ${{ steps.bump_version.outputs.new_tag }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Read version from file
        run: |
          # Read the version from the version file, only store the number (without the 'v')
          INITIAL_VERSION=$(source version && echo ${VERSION#v})
          echo "Current version: $INITIAL_VERSION"
          echo "INITIAL_VERSION=${INITIAL_VERSION}" >> $GITHUB_ENV

      - name: Bump version and push tag
        id: bump_version
        uses: anothrNick/github-tag-action@v1
        env:
          DEFAULT_BUMP: minor
          DRY_RUN: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: ${{ env.INITIAL_VERSION }}
          WITH_V: true

      - name: Update version file with new version
        run: |
          echo "New version: ${{ steps.bump_version.outputs.new_tag }}"
          echo "VERSION=${{ steps.bump_version.outputs.new_tag }}" > version
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add version
          git commit -m "chore: update version file to ${{ steps.bump_version.outputs.new_tag }}"
          git push

      - name: Push new tag
        run: |
          git tag ${{ steps.bump_version.outputs.new_tag }}
          git push origin ${{ steps.bump_version.outputs.new_tag }}

  create-release:
    needs: bump-version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out the repository and pull the new tag
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.bump-version.outputs.new_tag }}

      - name: Save Pull Request Description to File
        run: |
          echo "${{ github.event.pull_request.body }}" > /tmp/pull_request_description.md

      - name: Build release packages
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: |
            util_caching_release
          target: release

      - name: Copy release packages
        run: |
          mkdir -p /tmp/artifacts/
          docker run --rm -v /tmp/artifacts:/tmp/artifacts util_caching_release cp -r /release /tmp/artifacts/

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "/tmp/artifacts/release/*"
          tag: ${{ needs.bump-version.outputs.new_tag }}
          bodyFile: /tmp/pull_request_description.md


